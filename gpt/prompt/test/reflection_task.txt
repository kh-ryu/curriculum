### Task 4: Hopping Forward
**Task 4 Description:** Combine the skills learned from the previous tasks to perform hops that progress in the forward direction.

```python
def compute_reward(observation, action, next_observation) -> Tuple[np.float64, Dict[str, np.float64]]:
    x_position_before = observation[0]
    x_position_after = next_observation[0]
    z_height_before = observation[1]
    z_height_after = next_observation[1]
    
    x_velocity = (x_position_after - x_position_before) / 0.05
    z_velocity = (z_height_after - z_height_before) / 0.05
    
    # Reward for moving forwards
    forward_reward_temp = 1.0
    forward_reward = np.exp(x_velocity / forward_reward_temp)
    
    # Reward for hopping
    hop_reward_temp = 2.0
    hop_reward = np.exp(max(z_velocity, 0) / hop_reward_temp)
    
    healthy_reward = 1 if observation[2] > -0.15 and observation[2] < 0.15 else 0
    
    control_cost = 0.1 * np.sum(np.square(action))
    
    reward = healthy_reward + forward_reward + hop_reward - control_cost
    
    return reward, {'healthy_reward': healthy_reward, 'forward_reward': forward_reward, 'hop_reward': hop_reward, 'control_cost': control_cost}
```